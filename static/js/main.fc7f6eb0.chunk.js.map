{"version":3,"sources":["components/PokemonDexCard.js","components/Loading.js","components/Pokedex.js","components/StatChart.js","components/PokemonInfoCard.js","components/PokemonInfo.js","App.js","index.js"],"names":["PokemonDexCard","name","types","dexNumber","sprite","useState","background","setBackground","useEffect","typeArr","type","push","length","className","to","style","backgroundImage","src","alt","split","Loading","isLoading","Pokedex","pokedex","setPokedex","setIsLoading","fetchData","a","pokeArr","Array","fill","map","_","index","Promise","all","url","fetch","response","pokemonRes","json","data","concat","console","log","pokemon","id","sprites","front_default","StatChart","baseStats","stat","baseStatName","value","width","backgroundColor","PokemonInfoCard","stats","setTypes","setBaseStats","typeNum","indexOf","statObj","i","base_stat","border","PokemonInfo","match","setPokemon","params","other","App","basename","process","path","exact","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc7f6eb0.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/component_styles/PokemonDexCard.css\";\r\n\r\n// returns a pokemon card with identifiers for each pokemon\r\nexport const PokemonDexCard = ({ name, types, dexNumber, sprite }) => {\r\n\tconst [background, setBackground] = useState(\"\");\r\n\r\n\t//sets the background to a gradient of the two types that the pokemon has\r\n\tuseEffect(() => {\r\n\t\tconst typeArr = [];\r\n\r\n\t\tfor (const type of types) {\r\n\t\t\tif (type.type.name != null) {\r\n\t\t\t\ttypeArr.push(type.type.name);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetBackground(\r\n\t\t\ttypeArr.length > 1\r\n\t\t\t\t? `linear-gradient(to right, var(--${typeArr[0]}1), var(--${typeArr[1]}1)`\r\n\t\t\t\t: `linear-gradient(var(--${typeArr[0]}1), var(--${typeArr[0]}1)`\r\n\t\t);\r\n\t}, [types]);\r\n\r\n\treturn (\r\n\t\t<div className={`pokemon`}>\r\n\t\t\t{/* Routes to  */}\r\n\t\t\t<Link to={`/pokemon/${dexNumber}`} className=\"pokemon__link\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`pokemon__card pokemon--${dexNumber}`}\r\n\t\t\t\t\tstyle={{ backgroundImage: background }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<img src={sprite} className={`pokemon__sprite`} alt={name} />\r\n\t\t\t\t\t<div className=\"pokemon__data\">\r\n\t\t\t\t\t\t<div className=\"pokemon__id\">{`${dexNumber}`}</div>\r\n\t\t\t\t\t\t<hr className=\"pokemon__hr\" />\r\n\t\t\t\t\t\t<div className=\"pokemon__name\">{`${name.split(\"-\")[0]}`}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport \"../styles/component_styles/Loading.css\";\r\n\r\n// returns loading text when setLoading is true on App\r\nexport const Loading = ({ isLoading }) => {\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<div className=\"loading\">\r\n\t\t\t\t<h2 className=\"loading__loadingText\">Loading...</h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn <></>;\r\n\t}\r\n};\r\n","import \"../styles/component_styles/Pokedex.css\";\r\nimport { PokemonDexCard } from \"./PokemonDexCard\";\r\nimport { Loading } from \"./Loading\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// maps an array of pokemon\r\nexport const Pokedex = () => {\r\n\t// holds pokemon data\r\n\tconst [pokedex, setPokedex] = useState([]);\r\n\t// if true, instead of pokedex showing, shows a loading message\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\t// amount of pokemon that will be loaded in\r\n\t// total created pokemon is 898, 151 is the Kanto region, which is typically what I end up fetching\r\n\tconst POKEMON_IN_DEX = 151;\r\n\r\n\t// fetches pokemon from api\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\t// sets the loading screen\r\n\t\t\tsetIsLoading(true);\r\n\t\t\t// makes POKEMON_IN_DEX length array filled with urls that have each pokemon associated\r\n\t\t\tconst pokeArr = new Array(POKEMON_IN_DEX).fill(\"\").map((_, index) => {\r\n\t\t\t\treturn `https://pokeapi.co/api/v2/pokemon/${index + 1}`;\r\n\t\t\t});\r\n\t\t\ttry {\r\n\t\t\t\t// fetches a response for each pokemon url\r\n\t\t\t\tconst response = await Promise.all(pokeArr.map((url) => fetch(url)));\r\n\t\t\t\t// changes all responses to json\r\n\t\t\t\tconst data = await Promise.all(\r\n\t\t\t\t\tresponse.map((pokemonRes) => pokemonRes.json())\r\n\t\t\t\t);\r\n\t\t\t\t// sets the pokedex to the data\r\n\t\t\t\tsetPokedex((pokedex) => pokedex.concat(data));\r\n\t\t\t\t// removes loading screen\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t};\r\n\t\tif (pokedex.length < POKEMON_IN_DEX) {\r\n\t\t\tfetchData();\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\tif (pokedex.length === 0) {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<h1 className=\"title\">Pokedex</h1>\r\n\t\t\t\t<Loading isLoading={isLoading} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<h1 className=\"title\">Pokedex</h1>\r\n\t\t\t\t<div className=\"pokedex\">\r\n\t\t\t\t\t{pokedex.map((pokemon) => (\r\n\t\t\t\t\t\t<PokemonDexCard\r\n\t\t\t\t\t\t\tdexNumber={pokemon.id} // pokemon's dex number\r\n\t\t\t\t\t\t\tkey={pokemon.id} // key for React, each dex number is unique\r\n\t\t\t\t\t\t\ttypes={pokemon.types} // pokemon's types, an object\r\n\t\t\t\t\t\t\tname={pokemon.name} // name of the pokemon\r\n\t\t\t\t\t\t\tsprite={pokemon.sprites.front_default} // image of pokemon\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n","import React from \"react\";\r\nimport \"../styles/component_styles/StatChart.css\";\r\n\r\nexport const StatChart = ({ baseStats, types }) => {\r\n\treturn (\r\n\t\t<div className=\"stat-chart\">\r\n\t\t\t<div className=\"stat-chart__base-stat-name-container\">\r\n\t\t\t\t{baseStats.map((stat) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"stat-chart__base-stat-name\"\r\n\t\t\t\t\t\t\tkey={`${stat.baseStatName}StatName`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{`${stat.baseStatName}: `} &nbsp;\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"stat-chart__base-stat-value-container\">\r\n\t\t\t\t{baseStats.map((stat) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tkey={`${stat.baseStatName}StatValue`}\r\n\t\t\t\t\t\t\tclassName=\"stat-chart__base-stat\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"stat-chart__base-stat-value\">\r\n\t\t\t\t\t\t\t\t{stat.value < 100 ? (\r\n\t\t\t\t\t\t\t\t\t<span>{`${stat.value}`} &nbsp;</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<span>{` ${stat.value}`}</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={`stat-chart__base-stat-line`}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: `${stat.value <= 135 ? stat.value : 135}px`,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: `var(--${types[0]}4`,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"stat-chart__base-stat-value-bar\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/component_styles/PokemonInfoCard.css\";\r\nimport { StatChart } from \"./StatChart\";\r\n\r\nexport const PokemonInfoCard = ({\r\n\tpokemon,\r\n\tdexNumber,\r\n\tname,\r\n\tsprite,\r\n\tstats,\r\n}) => {\r\n\tconst [background, setBackground] = useState(\"\");\r\n\tconst [types, setTypes] = useState([]);\r\n\tconst [baseStats, setBaseStats] = useState([]);\r\n\r\n\t//sets types to have the pokemon's types\r\n\tuseEffect(() => {\r\n\t\tfor (const typeNum of pokemon.types) {\r\n\t\t\tif (\r\n\t\t\t\ttypeNum.type.name != null &&\r\n\t\t\t\ttypes.indexOf(typeNum.type.name) === -1\r\n\t\t\t) {\r\n\t\t\t\tsetTypes((types) => types.concat(typeNum.type.name));\r\n\t\t\t}\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\t// sets baseStats to hold pokemon's base stats\r\n\tuseEffect(() => {\r\n\t\tconst statObj = [\"HP\", \"Attack\", \"Defense\", \"SpAtk\", \"SpDef\", \"Speed\"];\r\n\t\tfor (let i = 0; i < statObj.length; i++) {\r\n\t\t\tsetBaseStats((baseStats) =>\r\n\t\t\t\tbaseStats.concat({\r\n\t\t\t\t\tbaseStatName: statObj[i],\r\n\t\t\t\t\tvalue: stats[i].base_stat,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\t// sets the background\r\n\tuseEffect(() => {\r\n\t\tsetBackground(\r\n\t\t\ttypes.length > 1\r\n\t\t\t\t? `linear-gradient(to right, var(--${types[0]}1), var(--${types[1]}1)`\r\n\t\t\t\t: `linear-gradient(var(--${types[0]}1), var(--${types[0]}1)`\r\n\t\t);\r\n\t}, [types]);\r\n\r\n\treturn (\r\n\t\t<div className={`pokemon-info-card`}>\r\n\t\t\t{/* Background of card, contains whole card */}\r\n\t\t\t<div\r\n\t\t\t\tclassName={`pokemon-info-card__card`}\r\n\t\t\t\tstyle={{ backgroundImage: background }}\r\n\t\t\t>\r\n\t\t\t\t{/* sprite of pokemon */}\r\n\t\t\t\t<div className=\"pokemon-info-card__sprite-container\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={sprite}\r\n\t\t\t\t\t\tclassName={`pokemon-info-card__sprite`}\r\n\t\t\t\t\t\talt={name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* all info of pokemon aside from sprite */}\r\n\t\t\t\t<div className=\"pokemon-info-card__info\">\r\n\t\t\t\t\t{/* dex number and name */}\r\n\t\t\t\t\t<div className=\"pokemon-info-card__id\">{`${dexNumber}: ${name}`}</div>\r\n\t\t\t\t\t{/* pokemon's types */}\r\n\t\t\t\t\t<div className=\"pokemon-info-card__types\">\r\n\t\t\t\t\t\t{types.map((type) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={type}\r\n\t\t\t\t\t\t\t\tclassName=\"pokemon-info-card__type-card\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tbackgroundImage: `linear-gradient(var(--${type}1), var(--${type}2))`,\r\n\t\t\t\t\t\t\t\t\tborder: `2px solid var(--${type}3)`,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t// `linear-gradient(to right, var(--${types[0]}1), var(--${types[1]}1)`\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{type}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* pokemon's base stats */}\r\n\t\t\t\t\t<StatChart baseStats={baseStats} types={types} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PokemonInfoCard } from \"./PokemonInfoCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/component_styles/PokemonInfo.css\";\r\n\r\nexport const PokemonInfo = ({ match }) => {\r\n\tconst [pokemon, setPokemon] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\tmatch.params.dexNumber\r\n\t\t\t\t\t? `https://pokeapi.co/api/v2/pokemon/${match.params.dexNumber}`\r\n\t\t\t\t\t: `https://pokeapi.co/api/v2/pokemon/${match.params.name}`\r\n\t\t\t);\r\n\t\t\tconst json = await response.json();\r\n\t\t\tsetPokemon(json);\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, [match.params.dexNumber, match.params.name]);\r\n\r\n\tif (pokemon) {\r\n\t\treturn (\r\n\t\t\t<div className=\"pokemon-info\">\r\n\t\t\t\t<div className=\"pokemon-info__container\">\r\n\t\t\t\t\t<PokemonInfoCard\r\n\t\t\t\t\t\tdexNumber={pokemon.id} // pokemon's dex number\r\n\t\t\t\t\t\tpokemon={pokemon} // pokemon's types, an object\r\n\t\t\t\t\t\tname={pokemon.name} // name of the pokemon\r\n\t\t\t\t\t\tsprite={pokemon.sprites.other[\"official-artwork\"].front_default} // image of pokemon\r\n\t\t\t\t\t\tstats={pokemon.stats} // pokemon stats\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link to={`/`} className=\"pokemon-info__link\">\r\n\t\t\t\t\tGo home\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn \"\";\r\n\t}\r\n};\r\n","import { Pokedex } from \"./components/Pokedex\";\r\nimport { PokemonInfo } from \"./components/PokemonInfo\";\r\nimport \"./styles/App.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/\" exact component={Pokedex} />\r\n\t\t\t\t<Route path=\"/pokemon/:dexNumber\" exact component={PokemonInfo} />\r\n\t\t\t\t<Route path=\"/pokemon/:name\" exact component={PokemonInfo} />\r\n\t\t\t\t<Route path=\"/\" render={() => <div>404 Page Not Found</div>} />\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}